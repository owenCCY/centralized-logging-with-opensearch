{
	"type": "object",
	"properties": {
		"time": {
			"type": "big_int",
			"expression": "FLOOR(\"time\" / 60000) * 60000"
		},
		"timestamp": {
			"type": "timestamp",
			"expression": "DATE_TRUNC('minute', \"timestamp\")"
		},
		"c-ip": {
			"type": "string"
		},
		"cs-method": {
			"type": "string"
		},
		"cs-host": {
			"type": "string",
			"partition": true
		},
		"cs-protocol-version": {
			"type": "string"
		},
		"cs-uri-stem": {
			"type": "string"
		},
		"sc-status-group": {
			"type": "string"
		},
		"sc-status": {
			"type": "integer"
		},
		"cs-protocol": {
			"type": "string"
		},
		"time-taken-in-second": {
			"type": "integer"
		},
		"ssl-protocol": {
			"type": "string"
		},
		"x-edge-location": {
			"type": "string"
		},
		"x-edge-result-type": {
			"type": "string"
		},
		"x-edge-response-result-type": {
			"type": "string"
		},
		"x-edge-detailed-result-type": {
			"type": "string"
		},
		"hit-cache": {
			"type": "boolean"
		},
		"back-to-origin": {
			"type": "boolean"
		},
		"ua_os": {
			"type": "string",
			"expression": "\"enrichment\".\"ua_os\""
		},
		"ua_device": {
			"type": "string",
			"expression": "\"enrichment\".\"ua_device\""
		},
		"ua_browser": {
			"type": "string",
			"expression": "\"enrichment\".\"ua_browser\""
		},
		"ua_category": {
			"type": "string",
			"expression": "\"enrichment\".\"ua_category\""
		},
		"geo_iso_code": {
			"type": "string",
			"expression": "\"enrichment\".\"geo_iso_code\""
		},
		"geo_country": {
			"type": "string",
			"expression": "\"enrichment\".\"geo_country\""
		},
		"geo_city": {
			"type": "string",
			"expression": "\"enrichment\".\"geo_city\""
		},
		"time-taken": {
			"type": "double",
			"measure": true,
			"expression": "cast(sum(\"time-taken\") as double)"
		},
		"time-to-first-byte": {
			"type": "double",
			"measure": true,
			"expression": "cast(sum(\"time-to-first-byte\") as double)"
		},
		"cs-bytes": {
			"type": "double",
			"measure": true,
			"expression": "cast(sum(\"cs-bytes\") as double)"
		},
		"sc-bytes": {
			"type": "double",
			"measure": true,
			"expression": "cast(sum(\"sc-bytes\") as double)"
		},
		"requests": {
			"type": "big_int",
			"measure": true,
			"expression": "cast(count(1) as bigint)"
		},
		"event_hour": {
			"type": "string",
			"partition": true
		},
		"__execution_name__": {
			"type": "string",
			"partition": true
		}
	}
}