{
	"type": "object",
	"properties": {
		"time": {
			"type": "big_int",
			"expression": "\"timestamp\""
		},
		"timestamp": {
			"type": "timestamp",
			"expression": "CAST(FROM_UNIXTIME(\"timestamp\" / 1000) AS timestamp)"
		},
		"formatversion": {
			"type": "integer"
		},
		"webaclid": {
			"type": "string"
		},
		"webaclname": {
			"type": "string",
			"expression": "SPLIT(\"webaclid\", '/')[3]"
		},
		"terminatingruleid": {
			"type": "string"
		},
		"terminatingruletype": {
			"type": "string"
		},
		"action": {
			"type": "string"
		},
		"action_fixed": {
			"type": "string",
			"expression": "CASE WHEN action = 'ALLOW' AND labels != ARRAY[] THEN 'COUNT' ELSE action END"
		},
		"terminatingrulematchdetails": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"conditiontype": {
						"type": "string"
					},
					"sensitivitylevel": {
						"type": "string"
					},
					"location": {
						"type": "string"
					},
					"matcheddata": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			}
		},
		"httpsourcename": {
			"type": "string"
		},
		"httpsourceid": {
			"type": "string"
		},
		"rulegrouplist": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"rulegroupid": {
						"type": "string"
					},
					"terminatingrule": {
						"type": "object",
						"properties": {
							"ruleid": {
								"type": "string"
							},
							"action": {
								"type": "string"
							},
							"rulematchdetails": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"conditiontype": {
											"type": "string"
										},
										"sensitivitylevel": {
											"type": "string"
										},
										"location": {
											"type": "string"
										},
										"matcheddata": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"nonterminatingmatchingrules": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"ruleid": {
									"type": "string"
								},
								"action": {
									"type": "string"
								},
								"rulematchdetails": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"conditiontype": {
												"type": "string"
											},
											"sensitivitylevel": {
												"type": "string"
											},
											"location": {
												"type": "string"
											},
											"matcheddata": {
												"type": "array",
												"items": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					},
					"excludedrules": {
						"type": "string"
					}
				}
			}
		},
		"ratebasedrulelist": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"ratebasedruleid": {
						"type": "string"
					},
					"limitkey": {
						"type": "string"
					},
					"maxrateallowed": {
						"type": "integer"
					}
				}
			}
		},
		"nonterminatingmatchingrules": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"ruleid": {
						"type": "string"
					},
					"action": {
						"type": "string"
					},
					"rulematchdetails": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"conditiontype": {
									"type": "string"
								},
								"sensitivitylevel": {
									"type": "string"
								},
								"location": {
									"type": "string"
								},
								"matcheddata": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						}
					},
					"captcharesponse": {
						"type": "object",
						"properties": {
							"responsecode": {
								"type": "string"
							},
							"solvetimestamp": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"requestheadersinserted": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {
						"type": "string"
					}
				}
			}
		},
		"responsecodesent": {
			"type": "string"
		},
		"host": {
			"type": "string",
			"expression": "case when filter(httprequest.headers, x -> lower(x.name) = 'host' ) = ARRAY[] then '' else filter(httprequest.headers, x -> lower(x.name) = 'host' )[1].value end"
		},
		"clientip": {
			"type": "string",
			"expression": "httprequest.clientip"
		},
		"country": {
			"type": "string",
			"expression": "httprequest.country"
		},
		"uri": {
			"type": "string",
			"expression": "httprequest.uri"
		},
		"args": {
			"type": "string",
			"expression": "httprequest.args"
		},
		"httpmethod": {
			"type": "string",
			"expression": "httprequest.httpmethod"
		},
		"httprequest": {
			"type": "object",
			"properties": {
				"clientip": {
					"type": "string"
				},
				"country": {
					"type": "string"
				},
				"headers": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"value": {
								"type": "string"
							}
						}
					}
				},
				"uri": {
					"type": "string"
				},
				"args": {
					"type": "string"
				},
				"httpversion": {
					"type": "string"
				},
				"httpmethod": {
					"type": "string"
				},
				"requestid": {
					"type": "string"
				}
			}
		},
		"labels": {
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					}
				}
			}
		},
		"captcharesponse": {
			"type": "object",
			"properties": {
				"responsecode": {
					"type": "string"
				},
				"solvetimestamp": {
					"type": "string"
				},
				"failureReason": {
					"type": "string"
				}
			}
		},
		"account_id": {
			"type": "string",
			"partition": true,
			"expression": "SPLIT(\"webaclid\", ':')[5]"
		},
		"region": {
			"type": "string",
			"partition": true,
			"expression": "SPLIT(\"webaclid\", ':')[4]"
		},
		"event_hour": {
			"type": "string",
			"partition": true,
			"expression": "DATE_FORMAT(CAST(FROM_UNIXTIME(\"timestamp\" / 1000) AS timestamp), '%Y%m%d%H')"
		},
		"__execution_name__": {
			"type": "string",
			"partition": true,
			"expression": "'{{}}'"
		}
	}
}