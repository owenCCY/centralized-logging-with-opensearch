{
	"type": "object",
	"properties": {
		"time": {
			"type": "big_int",
			"expression": "CAST(to_unixtime(from_iso8601_timestamp(\"time\")) * 1000 AS bigint)"
		},
		"timestamp": {
			"type": "timestamp",
			"expression": "from_iso8601_timestamp(\"time\")"
		},
		"type": {
			"type": "string"
		},
		"elb": {
			"type": "string",
			"partition": true
		},
		"client_ip": {
			"type": "string"
		},
		"client_port": {
			"type": "integer"
		},
		"target_ip": {
			"type": "string"
		},
		"target_port": {
			"type": "integer"
		},
		"request_processing_time": {
			"type": "double"
		},
		"target_processing_time": {
			"type": "double"
		},
		"response_processing_time": {
			"type": "double"
		},
		"elb_status_code_group": {
			"type": "string",
			"expression": "CASE WHEN elb_status_code BETWEEN 100 AND 199 THEN '1xx' WHEN elb_status_code BETWEEN 200 AND 299 THEN '2xx' WHEN elb_status_code BETWEEN 300 AND 399 THEN '3xx' WHEN elb_status_code BETWEEN 400 AND 499 THEN '4xx' WHEN elb_status_code BETWEEN 500 AND 599 THEN '5xx' ELSE '-' END"
		},
		"elb_status_code": {
			"type": "integer"
		},
		"target_status_code": {
			"type": "string"
		},
		"received_bytes": {
			"type": "double"
		},
		"sent_bytes": {
			"type": "double"
		},
		"request_verb": {
			"type": "string"
		},
		"request_url": {
			"type": "string"
		},
		"request_host": {
			"type": "string",
			"expression": "url_extract_host(\"request_url\")"
		},
		"request_path": {
			"type": "string",
			"expression": "url_extract_path(\"request_url\")"
		},
		"request_proto": {
			"type": "string"
		},
		"user_agent": {
			"type": "string"
		},
		"ssl_cipher": {
			"type": "string"
		},
		"ssl_protocol": {
			"type": "string"
		},
		"target_group_arn": {
			"type": "string"
		},
		"trace_id": {
			"type": "string"
		},
		"domain_name": {
			"type": "string"
		},
		"chosen_cert_arn": {
			"type": "string"
		},
		"matched_rule_priority": {
			"type": "string"
		},
		"request_creation_time": {
			"type": "string"
		},
		"actions_executed": {
			"type": "string"
		},
		"redirect_url": {
			"type": "string"
		},
		"lambda_error_reason": {
			"type": "string"
		},
		"target_port_list": {
			"type": "string"
		},
		"target_status_code_list": {
			"type": "string"
		},
		"classification": {
			"type": "string"
		},
		"classification_reason": {
			"type": "string"
		},
		"enrichment": {
			"type": "object",
			"properties": {
				"geo_iso_code": {
					"type": "string"
				},
				"geo_country": {
					"type": "string"
				},
				"geo_city": {
					"type": "string"
				},
				"geo_location": {
					"type": "string"
				},
				"ua_browser": {
					"type": "string"
				},
				"ua_browser_version": {
					"type": "string"
				},
				"ua_os": {
					"type": "string"
				},
				"ua_os_version": {
					"type": "string"
				},
				"ua_device": {
					"type": "string"
				},
				"ua_category": {
					"type": "string"
				}
			},
			"expression": "CAST(ROW(json_extract_scalar(\"enrichment\", '$.geo_iso_code'), json_extract_scalar(\"enrichment\", '$.geo_country'), json_extract_scalar(\"enrichment\", '$.geo_city'), json_extract_scalar(\"enrichment\", '$.geo_location'), json_extract_scalar(\"enrichment\", '$.ua_browser'), json_extract_scalar(\"enrichment\", '$.ua_browser_version'), json_extract_scalar(\"enrichment\", '$.ua_os'), json_extract_scalar(\"enrichment\", '$.ua_os_version'), json_extract_scalar(\"enrichment\", '$.ua_device'), json_extract_scalar(\"enrichment\", '$.ua_category')) AS ROW(geo_iso_code varchar, geo_country varchar, geo_city varchar, geo_location varchar, ua_browser varchar, ua_browser_version varchar, ua_os varchar, ua_os_version varchar, ua_device varchar, ua_category varchar))"
		},
		"event_hour": {
			"type": "string",
			"partition": true,
			"expression": "date_format(from_iso8601_timestamp(\"time\"), '%Y%m%d%H')"
		},
		"__execution_name__": {
			"type": "string",
			"partition": true,
			"expression": "'{{}}'"
		}
	}
}