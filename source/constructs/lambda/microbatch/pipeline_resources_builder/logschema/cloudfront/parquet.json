{
	"type": "object",
	"properties": {
		"time": {
			"type": "big_int",
			"expression": "CAST(to_unixtime(from_iso8601_timestamp(concat(CAST(date AS varchar), 'T', \"time\", 'Z'))) * 1000 AS bigint)"
		},
		"timestamp": {
			"type": "timestamp",
			"expression": "from_iso8601_timestamp(concat(CAST(\"date\" AS varchar), 'T', \"time\", 'Z'))"
		},
		"x-edge-location": {
			"type": "string"
		},
		"sc-bytes": {
			"type": "big_int"
		},
		"c-ip": {
			"type": "string"
		},
		"cs-method": {
			"type": "string"
		},
		"cs-host": {
			"type": "string",
			"partition": true
		},
		"cs-uri-stem": {
			"type": "string"
		},
		"sc-status-group": {
			"type": "string",
			"expression": "CASE WHEN \"sc-status\" BETWEEN 100 AND 199 THEN '1xx' WHEN \"sc-status\" BETWEEN 200 AND 299 THEN '2xx' WHEN \"sc-status\" BETWEEN 300 AND 399 THEN '3xx' WHEN \"sc-status\" BETWEEN 400 AND 499 THEN '4xx' WHEN \"sc-status\" BETWEEN 500 AND 599 THEN '5xx' ELSE '-' END"
		},
		"sc-status": {
			"type": "integer"
		},
		"cs-referer": {
			"type": "string"
		},
		"cs-user-agent": {
			"type": "string",
			"expression": "url_decode(\"cs-user-agent\")"
		},
		"cs-uri-query": {
			"type": "string"
		},
		"cs-cookie": {
			"type": "string"
		},
		"x-edge-result-type": {
			"type": "string"
		},
		"x-edge-request-id": {
			"type": "string"
		},
		"x-host-header": {
			"type": "string"
		},
		"cs-protocol": {
			"type": "string"
		},
		"cs-bytes": {
			"type": "big_int"
		},
		"time-taken-in-second": {
			"type": "integer",
			"expression": "cast(floor(\"time-taken\") as integer)"
		},
		"time-taken": {
			"type": "double"
		},
		"x-forwarded-for": {
			"type": "string"
		},
		"ssl-protocol": {
			"type": "string"
		},
		"ssl-cipher": {
			"type": "string"
		},
		"x-edge-response-result-type": {
			"type": "string"
		},
		"cs-protocol-version": {
			"type": "string"
		},
		"fle-status": {
			"type": "string"
		},
		"fle-encrypted-fields": {
			"type": "integer"
		},
		"c-port": {
			"type": "integer"
		},
		"time-to-first-byte": {
			"type": "double"
		},
		"x-edge-detailed-result-type": {
			"type": "string"
		},
		"sc-content-type": {
			"type": "string"
		},
		"sc-content-len": {
			"type": "big_int"
		},
		"sc-range-start": {
			"type": "big_int"
		},
		"sc-range-end": {
			"type": "big_int"
		},
		"hit-cache": {
			"type": "boolean",
			"expression": "CASE WHEN \"x-edge-result-type\" like '%Hit' THEN true ELSE false END"
		},
		"back-to-origin": {
			"type": "boolean",
			"expression": "CASE WHEN (\"x-edge-detailed-result-type\" = 'Miss' OR (\"x-edge-detailed-result-type\" like '%Origin%' AND \"x-edge-detailed-result-type\" <> 'OriginShieldHit')) THEN true ELSE false END"
		},
		"enrichment": {
			"type": "object",
			"properties": {
				"geo_iso_code": {
					"type": "string"
				},
				"geo_country": {
					"type": "string"
				},
				"geo_city": {
					"type": "string"
				},
				"geo_location": {
					"type": "string"
				},
				"ua_browser": {
					"type": "string"
				},
				"ua_browser_version": {
					"type": "string"
				},
				"ua_os": {
					"type": "string"
				},
				"ua_os_version": {
					"type": "string"
				},
				"ua_device": {
					"type": "string"
				},
				"ua_category": {
					"type": "string"
				}
			},
			"expression": "CAST(ROW(json_extract_scalar(\"enrichment\", '$.geo_iso_code'), json_extract_scalar(\"enrichment\", '$.geo_country'), json_extract_scalar(\"enrichment\", '$.geo_city'), json_extract_scalar(\"enrichment\", '$.geo_location'), json_extract_scalar(\"enrichment\", '$.ua_browser'), json_extract_scalar(\"enrichment\", '$.ua_browser_version'), json_extract_scalar(\"enrichment\", '$.ua_os'), json_extract_scalar(\"enrichment\", '$.ua_os_version'), json_extract_scalar(\"enrichment\", '$.ua_device'), json_extract_scalar(\"enrichment\", '$.ua_category')) AS ROW(geo_iso_code varchar, geo_country varchar, geo_city varchar, geo_location varchar, ua_browser varchar, ua_browser_version varchar, ua_os varchar, ua_os_version varchar, ua_device varchar, ua_category varchar))"
		},
		"event_hour": {
			"type": "string",
			"partition": true,
			"expression": "date_format(from_iso8601_timestamp(concat(CAST(\"date\" AS varchar), 'T', \"time\", 'Z')), '%Y%m%d%H')"
		},
		"__execution_name__": {
			"type": "string",
			"partition": true,
			"expression": "'{{}}'"
		}
	}
}