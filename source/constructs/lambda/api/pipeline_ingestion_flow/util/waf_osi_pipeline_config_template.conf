###
  ## Relevant Documentation for this blueprint
    # https://docs.aws.amazon.com/opensearch-service/latest/developerguide/use-cases-overview.html
    # https://docs.aws.amazon.com/opensearch-service/latest/developerguide/configure-client.html#configure-client-s3
    # https://docs.aws.amazon.com/opensearch-service/latest/developerguide/pipeline-domain-access.html
  ##
###
###
  ## waf-access-log-pipeline:
    # This pipeline receives waf (Web Application Firewall) access logs by pulling from an SQS queue, parses the json line for each log using the
    # 'parse_json' processor, extracts the webAclName from the webAclId using the 'grok' processor, and then uses the 'list_to_map' processor to
    # extract the name value pairs of the httpRequest headers in the logs, and sends the result to an opensearch index named 'waf-access-logs'
  ##
###

version: "2"
waf-access-log-pipeline:
  source:
    s3:
      # Prevent data loss by only considering logs to be processed successfully after they are received by the opensearch sink
      acknowledgments: true
      notification_type: "sqs"
      compression: gzip
      codec:
        newline:
      sqs:
        # Provide a SQS Queue URL to read from
        queue_url: {{queue_url}}
        # Lower maximum_messages depending on the size of your S3 objects
        maximum_messages: 10
        # Modify the visibility_timeout of the sqs messages depending on the size of your S3 objects.
        # Objects that are small (< 0.5 GB) and evenly distributed in size will result in the best performance
        # It is recommended to allocate a minimum of 30 seconds, and to add 30 seconds for every 0.25 GB of data in each S3 Object
        visibility_timeout: "90s"
      aws:
        # Provide the region to use for aws credentials
        region: {{region}}
        # Provide the role to assume for requests to SQS and S3
        sts_role_arn: {{pipeline_role_arn}}
  processor:
    - parse_json:
        source: "message"
    # This grok processor will extract the webaclName from the webaclId of the log
    # For example, the webAclId 'arn:aws:wafv2:ap-southeast-2:111122223333:regional/webacl/STMTest/1EXAMPLE-2ARN-3ARN-4ARN-123456EXAMPLE'
    # will result in the following entry being added to the Event: '{ "webaclName": "STMTest" }'
    - grok:
        pattern_definitions:
          WAFARN: "[^/]/webacl/(?<webaclName>[^/]*)"
        match:
          webaclId: [ "%{WAFARN}" ]
  sink:
    - opensearch:
        # Provide an AWS OpenSearch Service domain endpoint
        hosts: [{{endpoint}}]
        aws:
          # Provide a Role ARN with access to the domain. This role should have a trust relationship with osis-pipelines.amazonaws.com
          sts_role_arn: {{pipeline_role_arn}}
          # Provide the region of the domain.
          region: {{region}}
          # logs will be sent to an index depending on the value of the action from the vpc flow log (ACCEPT, REJECT)
          # Enable the 'serverless' flag if the sink is an Amazon OpenSearch Serverless collection
          # serverless: true
        index: {{index}}
        # Enable the 'distribution_version' setting if the AWS OpenSearch Service domain is of version Elasticsearch 6.x
        # distribution_version: "es6"
        # Enable and switch the 'enable_request_compression' flag if the default compression setting is changed in the domain. See https://docs.aws.amazon.com/opensearch-service/latest/developerguide/gzip.html
        # enable_request_compression: true/false
        # Enable the S3 DLQ to capture any failed requests in an S3 bucket
        dlq:
          s3:
            # Provide an S3 bucket
            bucket: {{backup_bucket_name}}
            # Provide a key path prefix for the failed requests
            key_path_prefix: {{pipeline_id}}
            # Provide the region of the bucket.
            region: {{region}}
            # Provide a Role ARN with access to the bucket. This role should have a trust relationship with osis-pipelines.amazonaws.com
            sts_role_arn: {{pipeline_role_arn}}