###
  ## Relevant Documentation for this blueprint
    # https://docs.aws.amazon.com/opensearch-service/latest/developerguide/use-cases-overview.html
    # https://docs.aws.amazon.com/opensearch-service/latest/developerguide/configure-client.html#configure-client-s3
    # https://docs.aws.amazon.com/opensearch-service/latest/developerguide/pipeline-domain-access.html
  ##
###
###
  ## elb-access-log-pipeline:
    # This pipeline receives ELB access logs by pulling from an SQS queue, extracts important values from the logs by matching
    # the value in the 'message' key (which contains the raw access log) against the grok pattern for ELB access logs. The grokked logs are then sent
    # to OpenSearch to an index prefixed with 'elb-access-logs' and suffixed with the load balancer name that is extracted by grok into the 'elb' key
  ##
###

version: "2"
alb-access-log-pipeline:
  source:
    s3:
      # Prevent data loss by only considering logs to be processed successfully after they are received by the opensearch sink
      acknowledgments: true
      notification_type: "sqs"
      compression: gzip
      codec:
        newline:
      sqs:
        # Provide a SQS Queue URL to read from
        queue_url: {{queue_url}}
        # Lower maximum_messages depending on the size of your access log S3 objects
        maximum_messages: 10
        # Modify the visibility_timeout of the sqs messages depending on the size of your access log S3 objects.
        # Objects that are small (< 0.5 GB) and evenly distributed in size will result in the best performance
        # It is recommended to allocate a minimum of 30 seconds, and to add an additional 30 seconds for every 0.25 GB of data in each S3 Object
        visibility_timeout: "60s"
      aws:
        # Provide the region to use for aws credentials
        region: {{region}}
        # Provide the role to assume for requests to SQS and S3
        sts_role_arn: {{pipeline_role_arn}}
  processor:
    - grok:
        match:
          message: [ '%{NOTSPACE:type} %{NOTSPACE:timestamp} %{NOTSPACE:elb} %{IPORHOST:client_ip}:%{NUMBER:client_port} %{IPORHOST:target_ip}:%{NUMBER:target_port} %{NOTSPACE:request_processing_time:float} %{NOTSPACE:target_processing_time:float} %{NOTSPACE:response_processing_time:float} %{NUMBER:elb_status_code} %{NUMBER:target_status_code} %{NUMBER:received_bytes} %{NUMBER:sent_bytes} "%{NOTSPACE:request_verb} %{URI:request_url} %{NOTSPACE:request_proto}" %{QUOTEDSTRING:user_agent} %{NOTSPACE:ssl_cipher} %{NOTSPACE:ssl_protocol} %{NOTSPACE:target_group_arn} %{QUOTEDSTRING:trace_id} %{QUOTEDSTRING:domain_name} %{QUOTEDSTRING:chosen_cert_arn} %{NUMBER:matched_rule_priority} %{NOTSPACE:request_creation_time} %{QUOTEDSTRING:actions_executed} %{QUOTEDSTRING:redirect_url} %{QUOTEDSTRING:error_reason} %{QUOTEDSTRING:target_port_list} %{QUOTEDSTRING:target_status_code_list} %{QUOTEDSTRING:classification} %{QUOTEDSTRING:classification_reason}' ]
  sink:
    - opensearch:
        # Provide an AWS OpenSearch Service domain endpoint
        hosts: [{{endpoint}}]
        aws:
          # Provide a Role ARN with access to the domain. This role should have a trust relationship with osis-pipelines.amazonaws.com
          sts_role_arn: {{pipeline_role_arn}}
          # Provide the region of the domain.
          region: {{region}}
          # Enable the 'serverless' flag if the sink is an Amazon OpenSearch Serverless collection
          # serverless: true
        # Enable the S3 DLQ to capture any failed requests in an S3 bucket
        dlq:
          s3:
            # Provide an S3 bucket
            bucket: {{backup_bucket_name}}
            # Provide a key path prefix for the failed requests
            key_path_prefix: {{pipeline_id}}
            # Provide the region of the bucket.
            region: {{region}}
            # Provide a Role ARN with access to the bucket. This role should have a trust relationship with osis-pipelines.amazonaws.com
            sts_role_arn: {{pipeline_role_arn}}
        # Send logs for each load balancer to a separate index based on load balancer name
        index: {{index}}
        # Enable the 'distribution_version' setting if the AWS OpenSearch Service domain is of version Elasticsearch 6.x
        # distribution_version: "es6"
        # Enable and switch the 'enable_request_compression' flag if the default compression setting is changed in the domain. See https://docs.aws.amazon.com/opensearch-service/latest/developerguide/gzip.html
        # enable_request_compression: true/false